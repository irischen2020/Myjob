mybatis的环境搭建：
    第一步：创建MAVEN工程；
    第二步：创建实体类和DAO的接口；
    第三步：创建MYBATIS的主配置文件：sqlMapConfig.xml;
    第四步：创建映射配置文件：IUserMapper.xml;

注意事项：
IUserMapper.xml文件：
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--这里的NAMESPACE属性的值必须是IUserDao接口的全限定类名-->

<mapper namespace="com.cc.dao.IUserDao">

    <!--配置查询所有-->

    <!--id属性的取值必须是IUserDao接口的方法名-->

    <select id="findAll">
        select * from user
    </select>
</mapper>

这样，我们在开发中，就无须再写DAO的实现类。MYBATIS自动帮助实现。



mybais的入门案例：
		//1、读取配置文件
		InputStream in = Resources.getResourceAsStream("sqlMapConfig.xml");
		//2、创建SqlSessionFactory工厂
		SqlSessionFactoryBuilder builder = new SqlSessionFactoryBuilder();
		SqlSessionFactory factory = builder.build(in);
		//3、使用工厂生产SqlSession对象
		SqlSession sqlSession = factory.openSession();
		//4、使用SqlSession创建Dao接口的代理对象
		IUserDao userDao = sqlSession.getMapper(IUserDao.class);
		//5、使用代理对象执行方法
		List<User> list = userDao.finaALL();
		//6、释放资源
		sqlSession.close();
		in.close();