<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <!--实验12：引用外部属性文件，依赖CONTEXT名称空间-->
    <!--数据库连接池上作为单实例是最好的，一个项目就一个连接池上，连接池里面管理很多连接，连接是直接从连接池上中拿-->
    <!--可以让SPRING帮我们创建连接池对象，管理连接池上-->
    <!--加载外部配置文件 固定写法classpath:表示引用类路径下的一个资源-->
    <context:property-placeholder location="classpath:dbconfig.properties"/>

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="user" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
        <property name="driverClass" value="${jdbc.driverClass}"></property>
    </bean>


<!--    配置JdbcTemplate-->
    <!--<bean class="org.springframework.jdbc.core.JdbcTemplate">-->
        <!--<property name="dataSource" ref="dataSource"></property>-->
    <!--</bean>-->


    <!--    声明式事务控制-->
<!--    1、配置事务管理器(切面)让其进行事务控制-->
    <!--<bean id="transactionManager" class="org.springframework.jdbc.datasource.....">-->
<!--        控制住数据源-->
        <!--<property name="dataSource" ref="dataSource"></property>-->
    <!--</bean>-->

<!--    2、开启基于注解的事务控制模式，依赖tx名称空间-->
    <!--<tx:annotation-driven transaction-manager="transactionManager"/>-->

<!--    3、给事务方法加注解。在代码里面-->
</beans>